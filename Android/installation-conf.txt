1. First download Android Studion IDE, for example: android-studio-ide-191.6010548-linux
2. Extract from zip and run using terminal ./bin/studio.sh
3. If it is 64 bit OS then we have to install associative files for 32 bit
4. Create Desktop Entry
5. Install SDK Components through SDK Manager
6. Create a blank activity project
7. Create a AVD through AVD Manager

Config:
Error: /dev/kvm device permission denied

Solution: 
sudo apt install qemu-kvm
ls -al /dev/kvm
grep kvm /etc/group

Output: kvm:x:some_number:
If there is nothing rightwards of the final :, there are no users in the kvm group. so run the following command

sudo adduser $USER kvm or usermod -a -G kvm $(whoami)

check once again with grep kvm /etc/group

sudo chown $USER -R /dev/kvm
sudo chmod o+x /dev/kvm

You might want to log out and back in (or restart), for the permissions to take effect.

Error: '/dev/kvm': No such file or directory
Solution:
mknod /dev/kvm c 10 232


//Adb installation
sudo apt-get install android-tools-adb android-tools-fastboot
sudo apt-get update && sudo apt-get install adb fastboot -y

adb devices
adb kill-server
adb tcpip 5555 // adb -P 5555 start-server
adb connect device-ip:5555
adb start-server
killall -9 adb

When the server starts, it binds to local TCP port 5037 and listens for commands sent from adb clientsâ€”all adb clients use port 5037 to communicate with the adb server.
ports in the range 5555 to 5585
Emulator 1, console: 5554
Emulator 1, adb: 5555
Emulator 2, console: 5556
Emulator 2, adb: 5557
and so on...

Error: Unable to run mksdcard SDK tool in ubuntu
sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386 -y

error: no devices/emulators found
Ans: If you get "error: device not found", you need to temporarily connect an Android Phone by USB cable, then on your host computer's command-line, type:
adb tcpip 5555

Then, connect to the Android device by IP address:
adb connect 192.168.0.10

To switch back to your USB connection, type:
adb usb

Additional Notes:

You do not need root access for this to work.
You may need to open port (5555) in your firewall.
You can use "ping " to ensure your host can find the device on the network


Error: ADB server version (36) doesn't match this client (39)

Find where your other adb is:

find /home -iname "*adb"|grep -i android

Say it was at;

/home/developer/Android/Sdk/platform-tools/adb

Then Make a softlink to the /usr/bin folder:

ln -s /home/developer/Android/Sdk/platform-tools/adb  /usr/bin/adb

To unlink the symbolic link if the links /usr/bin/adb exists
sudo unlink /usr/bin/adb

Then;

adb start-server


# Creating desktop entry
sudo -E /opt/google/android-studio/bin/studio.sh 
P.S. -E option is needed to keep our environment variables (ANDROID_HOME/ANDROID_SDK_ROOT) available while sudoing.

# You can find it in /usr/share/applications/jetbrains-studio.desktop:

[Desktop Entry]
Version=1.0
Type=Application
Name=Android Studio
Icon=/opt/google/android-studio/bin/studio.png
Exec="/opt/google/android-studio/bin/studio.sh" %f
Comment=The Drive to Develop
Categories=Development;IDE;
Terminal=false
StartupWMClass=jetbrains-studio




