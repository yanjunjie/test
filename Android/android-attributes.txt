id="@+id/next_button"
layout_width="match_parent"
layout_width="fill_parent"
layout_height="wrap_content"
orientation="vertical"
tools:context=".MainActivity"
layout_gravity="center"
gravity="center"
layout_margin="10dp"
text="Row 6"
textSize="18sp"
layout_below="@id/firsttext"
layout_alignRight="@id/firsttext"

For Constraint Layout Attributes:
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintLeft_toLeftOf="parent"
app:layout_constraintRight_toRightOf="parent"
app:layout_constraintTop_toTopOf="parent"


RelativeLayout:

For RelativeLayout you can use below property in TextView
android:gravity="center" for text center in TextView.
android:gravity="center_horizontal" inner text if you want horizontally centered.
android:gravity="center_vertical" inner text if you want vertically centered.
android:layout_centerInParent="true" if you want TextView in center position of parent view. 
android:layout_centerHorizontal="true" if you want TextView in horizontally center of parent view. 
android:layout_centerVertical="true" if you want TextView in vertically center of parent view.


GridLayout:
android:columnCount="2" is total number of rows of the Grid
android:rowCount="2" is total number of columns of the Grid

android:layout_row="1"
android:layout_column="0"

above two are a grid cell
Example:
00, 01, 02, 03
10, 11, 12, 13

android:layout_rowWeight="1"
android:layout_columnWeight="1"

above two attributes will allocate whole space as much as possible both right and bottom sides
android:layout_rowWeight="1" will take space to right side
android:layout_columnWeight="1" will take space to bottom side
and content will move to center
























