INSERT INTO user_account_statement(statement_id,session_key,login_id,user_id,
        account_number,from_date,to_date,ipaddress,create_date_time)
   VALUES(1070,'fe79e0345986b5a439c26f731234868b53f877366f529','2335','204254','108142',
          to_date('2014-08-18','yyyy-mm-dd'),to_date('2014-08-23','yyyy-mm-dd'),
                  '106.79.126.249',to_date('2014-08-23 16:45:06','yyyy-mm-dd hh24:mi:ss'));


//to_date()
The TO_DATE will convert given STRING to DATE by format, you have specified.
DATE_FORMAT however formats DATE as specified.

So you have following options:
1. If you want to get desired DATE as some special crafted STRING, then you go with TO_CHAR(DATE, '<format>')
2. If you want to convert given STRING to DATE, you go with TO_DATE(string,'<format that describes string>').
3. If you need one special crafted STRING reformat as another STRING, then you do both. First convert it to date, as described in 2, then convert back to string, as described in 1 with needed format.
4. And one more case - if you want to change output format, then you need to ALTER SESSION variable NLS_DATE_FORMAT.


//v.01
select * from nm_admission where trunc(entry_timestamp) = '09-SEP-2018';
select * from nm_admission where trunc(entry_timestamp) = to_date('09-SEP-2018','DD-MM-YY');
select * from nm_admission where to_char(entry_timestamp) = to_date('09-SEP-2018','DD-MM-YY');

In Mysql:

select * from NM_ADMISSION where MONTH(APPLICANT_SIGN_DATE) = 11;

Oracle:

SELECT * FROM NM_ADMISSION WHERE TO_CHAR(APPLICANT_SIGN_DATE,'MM') = '11';

//v.02 

We can convert the different format date into Oracle date format

    public function getAllPurchaseOrderReturnItemReport($fromDate,$toDate){
        
        return $this->db->query("
            SELECT prs.PR_RET_DATE,prc.ITEM_ID,itm.ITEM_NAME,itm.UNIT_ID,u.UNIT_NAME,
            sum(prc.RET_RECEIVE_QTY) TOTAL_RET_RECEIVE_QTY 
            FROM inv_pr_return_mst prs LEFT JOIN inv_pr_return_chd prc ON prs.PR_RET_MST_ID = prc.PR_RET_MST_ID LEFT JOIN inv_item itm ON prc.ITEM_ID=itm.ITEM_ID LEFT JOIN inv_unit u ON itm.UNIT_ID=u.UNIT_ID
            where prs.PR_RET_DATE BETWEEN TO_DATE('$fromDate', 'YYYY-MM-DD') and TO_DATE('$toDate', 'YYYY-MM-DD')
            group by prs.PR_RET_DATE,prc.ITEM_ID,itm.ITEM_NAME,itm.UNIT_ID,u.UNIT_NAME

        ")->result();
    }

...OR

SELECT prs.PR_RET_DATE,prc.ITEM_ID,itm.ITEM_NAME,itm.UNIT_ID,u.UNIT_NAME,
sum(prc.RET_RECEIVE_QTY) TOTAL_RET_RECEIVE_QTY 
FROM inv_pr_return_mst prs LEFT JOIN inv_pr_return_chd prc ON prs.PR_RET_MST_ID = prc.PR_RET_MST_ID LEFT JOIN inv_item itm ON prc.ITEM_ID=itm.ITEM_ID LEFT JOIN inv_unit u ON itm.UNIT_ID=u.UNIT_ID
where prs.PR_RET_DATE BETWEEN TO_DATE('2017-09-12', 'YYYY-MM-DD') and TO_DATE('2018-09-12', 'YYYY-MM-DD')
group by prs.PR_RET_DATE,prc.ITEM_ID,itm.ITEM_NAME,itm.UNIT_ID,u.UNIT_NAME;


//v.03

TO_DATE('$fromDate', 'YYYY-MM-DD') returns oracle date format.
Let's consider $fromDate is 2017-09-01 then the oracle will return 01-SEP-2017

If we want 01-09-2017 then we have to use to_char() as follows:

Syntax:
to_char(oracle_db_date, displaying_format)
to_char(TO_DATE('$fromDate', 'YYYY-MM-DD'),'DD-MM-YYYY')


//v.04
TO_DATE(val,
  CASE WHEN REGEXP_LIKE(val, '(AM|PM)')
    THEN 'MM/DD/YYYY HH:MI:SS AM'
    ELSE 'MM/DD/YYYY HH24:MI:SS'
  END)


//v.05, raw example:

$USER_IP = $_SERVER["REMOTE_ADDR"];
$DATE_TIME = date('d-m-Y');
$h = date('H');
$i = date('i');
$sql = "insert into ACCESS_INFO (ACCESS_INFO_ID,USER_ID,DATE_TIME,USER_IP)
        values (ACCESS_INFO_SEQ.NEXTVAL,$USER_ID,TO_DATE('$DATE_TIME $h:$i:00','DD/MM/YYYY HH24:MI:SS'),'$USER_IP')";
$stmt = oci_parse($conn, $sql);
oci_execute($stmt);

oci_parse: Prepares Oracle statement for execution. oci_parse() returns FALSE on error.
oci_execute: oci_execute() executes a previously parsed statement. It returns TRUE on success or FALSE on failure.










