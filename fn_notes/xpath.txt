// For Debugging
https://stackoverflow.com/questions/29386116/inspecting-drop-down-menus-in-new-chrome
https://stackoverflow.com/questions/49299042/react-select-how-to-keep-dropdown-open-when-styling-in-inspector

"decliningReasonInput": "//input[@id='decline_reason']",
"explainCancellationReason": "//div[contains(@class, 'ReactModalPortal')]//*/label[contains(text(), 'explanation')]/following-sibling::textarea"
"messageAssignedProvider": "//div[contains(@class, 'ReactModalPortal')]//*/label[contains(text(), 'Message')]/following-sibling::textarea"
"markIncompleteDropDown": "//div[@class='ReactModalPortal']//*/select"
"markIncompleteTextArea": "//div[@class='ReactModalPortal']//*/textarea"
"decliningReasonSelect": "//label[@for=\"decline_reason\"]/following-sibling::div"
"userIdFromList": "//div[contains(@data-nw-node,'FixedDataTableCell')]//*/a[contains(text(), '{id}')]"
"pgBadgeIcon": "//div[@data-nw-file='Badge' and contains(@title, 'In a talent pool')]"
"pendingAssignmentTab": "//div[contains(@data-nw-file,'UserList')]//li[contains(text(), 'Pending assignment')]"
"descriptionEdit": "//div[@data-nw-id='WorkOrderDescription']//*/button[@data-nw-id='Edit']"
"problemNotificationArea": "//div[@data-nw-file=\"NotificationExpander\"]//*/li[contains(text(), 'Problems Reported:')]"
//div[@id='tab2']//table[@class='payTablecss']//td[text()='$30.00']

// Menu Text Related
await this.waitFor(`//a[contains(@class, 'selected') and contains(text(), '${tabName}')]`);
await this.waitFor(`//a[contains(@class, 'selected') and text()='${tabName}']`);

### Ancestor Element find using contents
//a[contains(@href,'5693')]//ancestor::div[@data-nw-file="Card"]/preceding-sibling::div//button
(//bookmark/ancestor::*[@id][1]/@id | //bookmark/preceding::*[@id][1]/@id)[last()]
//*[title="50"]/ancestor::store
//*[ancestor::foo[bar[@attr="val"]]]
here, foo is ancestor
      bar is child
Or
//span[text()='Provider Custom Fields']//ancestor::div[@data-nw-file="TileDivision"]//following-sibling::div//button

### Descendant Element find using parent
//div[contains(text(), 'Cancellation')]/parent::div/parent::div/following-sibling::div

### Sibling find based on contents
//div[contains(text(), 'Cancellation')]/following-sibling::div

### element find based on contents
const locator = `//input[@data-nw-file='${name}']`;
await clickElement(this, locator);

### Return Text of the selected element
/node/child::text()[1] - should return Text1st
/node/child::text()[2] - should return text2nd
/node/text()[1] - should return Text1st
/node/text()[2] - should return text2nd
/root/div[.//a[@class='1']]/text()

***getText() for selenium
i.e,
var textPromise = driver.findElement(webdriver.By.className("credits")).getText();
textPromise.then((text) => {
  console.log(text);
});

driver.findElement(webdriver.By.css('.failures em')).getText().then(function(v) {
    expect(v).to.equal('0');
    done();
});

i.e,
  if (values.customFieldName) {
    const nameTip = await getElementText(this, this.pages.createWorkOrder.customFieldNameTip);
    expect(nameTip).to.contains(values.customFieldName);
  }


//Count elements
count(//input[@name='hai'])
evaluates to 3
then
(//input[@id='stack'])[count(//input[@name='hai'])]
will select the same nodes as
(//input[@id='stack'])[3]





