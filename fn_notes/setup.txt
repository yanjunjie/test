Mennesota Phone: 612-379-0982
Toronto, the capital of the province of Ontario
city: toronto
state: ontario

Street Name	Municipality	Postal/zip Code
DONORA DR	TORONTO	        M4B 1B3

// Staff Experiment
https://ui-test2.fndev.net/staff/experiments
- click on Add/Edit Experiment
- company name
- search for like custom field

// Service contract
From staff user->company list->edit->site features->Client Invoicing
-> "invoicing": true,

// Team
From staff user->company list->edit->Markesite features->Roles on Work
-> "teams": true

// Talent Type is Company Network
From staff user->company list->edit->Marketplace Settings->Networks


// React Template Create feature config
    "buyer1": {
      "item": "marketplaceBuyer",
      "configs": {
        "serviceType": true,
        "loginToken": true,
        "password": true,
        "photo": true,
        "publishWithoutFunds": false,
        "experimentsUser": {
          "Template Create": 1
        }
      }
    }

// React Wo Create
1 => React, 2 => old angular, 3 => simple create 4 => send to provider

// provider
"marketplaceProvider1": {
      "item": "marketplaceProvider",
      "configs": {
        "password": true,
        "loginToken": true,
        "photo": true,
        "typesOfWork": "5-10",
        "emailVerified": true,
        "marketplace": true,
        "geo": "mn",
        "preferences": {
          "fnAgreementProvider": 1504035677
        },
        "policyProcedures": true,
        "suspended": false,
        "tax": "personal",
        "profile": "personal",
        "insurance": "valid",
        "pqap": true
      }
    }

// Send to Provider feature config
"configs": {
        "serviceType": true,
        "loginToken": true,
        "password": true,
        "photo": true,
        "publishWithoutFunds": true,
        "geo": "mn:zipCode:55133",
        "experimentsUser": {
            "Work Order Create": 4
        }
    }

// Custom Field create feature config
"experimentsUser": {
                    "Custom Field Create": 1
                }

// Workworder schedule config
"configs": {
      "typeOfWork": "random",
      "pay": {
        "type": "hourly",
        "perHour": 40,
        "hours": 4,
        "finance": true
      }
      "published": true,
      "scheduleBusinessHours": "today 5:00am to tomorrow 5:00pm",
      "scheduleRange":"today 6:00am to +1d 12:00pm",
      "scheduleRange": "+1w 3-5pm to +2w 3-6pm America/Chicago",
      "geo": "mn"
    }


// Approved Wo config
    "configs": {
        "typeOfWork": "random",
        "geo": "mn:zipCode:55133",
        "published": true,
        "requested": true,
        "assigned": true,
        "confirmed": true,
        "completed": true,
        "approved": true
      }

// Address Config
 | city          | Minneapolis              |
 | state         | Minnesota                |
 | zip           | 55133                    |

// finance and deposit amount for buyer
 "depositAmount": 100000,
 "financeAmount": 100000 // this amount is borrowed from accountant


// Get an element index
const el = await this.waitFor(`//*`);
With ES6 destructuring you can do
const index = [...el.parentElement.children].indexOf(el)
or
const index = Array.from(el.parentElement.children).indexOf(el)
or ES5 version
var index = Array.prototype.slice.call(el.parentElement.children).indexOf(el)
jQuery
const index = $(this).parent().children().index(this);


// buyer, provider, client, project & network

{
  "category": "buyer",
  "description": "Creates an mp buyer, user and work order",
  "project": "mono",
  "schema": {
    "marketplaceBuyer1": {
      "item": "marketplaceBuyer",
      "configs": {
        "serviceType": true,
        "loginToken": true,
        "password": true,
        "photo": true,
        "publishWithoutFunds": false,
        "experimentsUser": {
          "Template Create": 1
        }
      }
    },
    "account1": {
      "item": "paymentAccount",
      "configs": {
        "depositAmount": 100000
      },
      "links": {
        "company": "marketplaceBuyer1"
      }
    },
    "marketplaceProvider1": {
      "item": "marketplaceProvider",
      "configs": {
        "password": true,
        "loginToken": true,
        "photo": true,
        "typesOfWork": "5-10",
        "emailVerified": true,
        "marketplace": true,
        "geo": "mn",
        "preferences": {
          "fnAgreementProvider": 1504035677
        },
        "policyProcedures": true,
        "suspended": false,
        "tax": "personal",
        "profile": "personal",
        "insurance": "valid",
        "pqap": true
      }
    },
    "client1": {
      "item": "client",
      "links": {
        "company": "marketplaceBuyer1"
      }
    },
    "project1": {
      "item": "project",
      "links": {
        "company": "marketplaceBuyer1",
        "client": "client1"
      }
    },
    "fieldnationNetwork1": {
      "item": "network",
      "configs": {
        "networkType": "fieldNation"
      },
      "links": {
        "owner": "marketplaceBuyer1"
      }
    },
    "vendorNetwork1": {
      "item": "network",
      "configs": {
        "networkType": "vendor"
      },
      "links": {
        "owner": "buyer1"
      }
    },
    "accountant1": {
      "item": "staff",
      "configs": {
        "group": 9
      }
    },
    "staff1": {
      "item": "staff"
    }
  }
}


// draftWorkOrder, publishWorkOrder, routedWorkOrder, assignedWorkOrder, completeWorkOrder, approvedWorkOrder

{
  "category": "buyer",
  "description": "Creates an mp buyer, user and work order",
  "project": "mono",
  "schema": {
    "marketplaceBuyer1": {
      "item": "marketplaceBuyer",
      "configs": {
        "serviceType": true,
        "loginToken": true,
        "password": true,
        "photo": true,
        "publishWithoutFunds": true,
        "geo": "mn:zipCode:55133"
      }
    },
    "account1": {
      "item": "paymentAccount",
      "configs": {
        "depositAmount": 100000
      },
      "links": {
        "company": "marketplaceBuyer1"
      }
    },
    "marketplaceProvider1": {
      "item": "marketplaceProvider",
      "configs": {
        "password": true,
        "loginToken": true,
        "photo": true,
        "policyProcedures": true,
        "typesOfWork": "8-8",
        "emailVerified": true,
        "marketplace": true,
        "geo": "mn:zipCode:55133"
      }
    },
    "draftWorkOrder1": {
      "item": "workOrder",
      "links": {
        "owner": "marketplaceBuyer1",
        "account": "account1"
      },
      "configs": {
        "typeOfWork": "8",
        "geo": "mn:zipCode:55133"
      }
    },
    "publishWorkOrder1": {
      "item": "workOrder",
      "links": {
        "owner": "marketplaceBuyer1",
        "account": "account1"
      },
      "configs": {
        "typeOfWork": "8",
        "geo": "mn:zipCode:55133",
        "published": true
      }
    },
    "routedWorkOrder1": {
      "item": "workOrder",
      "links": {
        "owner": "marketplaceBuyer1",
        "account": "account1",
        "provider": "marketplaceProvider1"
      },
      "configs": {
        "typeOfWork": "random",
        "published": true,
        "routed": true,
        "geo": "mn:zipCode:55133"
      }
    },
    "assignedWorkOrder1": {
      "item": "workOrder",
      "links": {
        "owner": "marketplaceBuyer1",
        "account": "account1",
        "provider": "marketplaceProvider1"
      },
      "configs": {
        "typeOfWork": "random",
        "published": true,
        "assigned": true,
        "geo": "mn:zipCode:55133"
      }
    },
    "completeWorkOrder1": {
      "item": "workOrder",
      "links": {
        "owner": "marketplaceBuyer1",
        "account": "account1",
        "provider": "marketplaceProvider1"
      },
      "configs": {
        "typeOfWork": "random",
        "geo": "mn:zipCode:55133",
        "published": true,
        "assigned": true,
        "completed": true
      }
    },
    "approvedWorkOrder1": {
      "item": "workOrder",
      "links": {
        "owner": "marketplaceBuyer1",
        "account": "account1",
        "provider": "marketplaceProvider1"
      },
      "configs": {
        "typeOfWork": "random",
        "geo": "mn:zipCode:55133",
        "published": true,
        "assigned": true,
        "completed": true,
        "approved": true
      }
    }
  }
}
 






