<?php
require_once 'Classes/PHPExcel.php';
require_once 'Classes/PHPExcel/IOFactory.php';
require_once 'Classes/PHPExcel/Calculation.php';
require_once 'Classes/PHPExcel/Cell.php';

$objPHPExcel = new PHPExcel();

// Set properties or metadata
$objPHPExcel->getProperties()->setCreator("Bablu Ahmed")
    ->setLastModifiedBy("Bablu")
    ->setTitle("Office 2007 XLSX Test Document")
    ->setSubject("Office 2007 XLSX Test Document")
    ->setDescription("Test doc for Office 2007 XLSX, generated by PHPExcel.")
    ->setKeywords("office 2007 openxml php")
    ->setCategory("Test result file");
$objPHPExcel->getActiveSheet()->setTitle('Jacos Standard File');

// Set Cell values or excel creating
/*$objPHPExcel->setActiveSheetIndex(0)
    ->setCellValue('A1', 'Hello')
    ->setCellValue('B1', 'world!');*/
//->setCellValueByColumnAndRow($column, $row, $value)

//Read an uploaded excel file without creating excel
$objPHPExcel = PHPExcel_IOFactory::load("uplodExcel.xlsx");
$objWorksheet = $objPHPExcel->getActiveSheet();
foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
    $worksheetTitle     = $worksheet->getTitle();
    $highestRow         = $worksheet->getHighestRow(); // e.g. 10
    $highestColumn      = $worksheet->getHighestColumn(); // e.g 'F'
    $highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
    $nrColumns = ord($highestColumn) - 64;
    echo "<br>The worksheet ".$worksheetTitle." has ";
    echo $nrColumns . ' columns (A-' . $highestColumn . ') ';
    echo ' and ' . $highestRow . ' rows.';
    echo '<br>Data: <table border="1"><tr>';
    for ($row = 1; $row <= $highestRow; ++ $row) {
        echo '<tr>';
        for ($col = 0; $col < $highestColumnIndex; ++ $col) {
            $cell = $worksheet->getCellByColumnAndRow($col, $row);
            $val = $cell->getValue();
            //$dataType = PHPExcel_Cell_DataType::dataTypeForValue($val);
            echo '<td>' . $val.'</td>';
        }
        echo '</tr>';
    }
    echo '</table>';
}

echo $objWorksheet->getStyle('A1:A3')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->getRGB();

echo "<br>";
//Get Specific color
$get_cell_color = array();

$count = 64;
for($i=1; $i<=$nrColumns; $i++) {
    $char = chr($count+$i);
    $get_cell_color_temp = $objPHPExcel->getActiveSheet()->getStyle($char."1")->getFill()->getStartColor()->getRGB();
    if ($get_cell_color_temp == "000000" or $get_cell_color_temp == "FFFFFF"){
        continue;
    }else {
        $get_cell_value[] = $objPHPExcel->getActiveSheet()->getCell($char . "1")->getValue();
        $get_cell_color[] = $objPHPExcel->getActiveSheet()->getStyle($char . "1")->getFill()->getStartColor()->getRGB();
    }
}

//print_r($get_cell_color);
echo "<table border='1'>";
    echo "<tr>";
    foreach ($get_cell_value as $value){

            echo "<td>".$value."</td><br>";
    }
    echo "</tr>";
echo "</table>";

//New object for new excel sheet or new file
$objPHPExcel2 = new PHPExcel();
//Final Output according to selected column color
$objWorksheet = $objPHPExcel->getActiveSheet();
foreach ($objPHPExcel->getWorksheetIterator() as $worksheet) {
    $worksheetTitle     = $worksheet->getTitle();
    $highestRow         = $worksheet->getHighestRow(); // e.g. 10
    $highestColumn      = $worksheet->getHighestColumn(); // e.g 'F'
    $highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
    $nrColumns = ord($highestColumn) - 64;
    echo "<br>The worksheet ".$worksheetTitle." has ";
    echo $nrColumns . ' columns (A-' . $highestColumn . ') ';
    echo ' and ' . $highestRow . ' rows.';
    echo '<br>Data: <table border="1"><tr>';

    $count = 65;
    for ($row = 1; $row <= $highestRow; ++ $row) {
        echo '<tr>';
        for ($col = 0; $col < $highestColumnIndex; $col++) {
            $char = chr($count + $col);
            $get_cell_color = $objWorksheet->getStyle($char."1")->getFill()->getStartColor()->getRGB();
			$cell = $worksheet->getCellByColumnAndRow($col, $row);
            $val = $cell->getStyle($char."1")->getFill()->getStartColor()->getRGB();
			$colIndex = PHPExcel_Cell::columnIndexFromString($cell->getColumn());

			if($val == "000000" or $val == "FFFFFF"){
				continue;
			}
			$val = $cell->getValue();
			$new_all_cells[][] = $val;
			$objPHPExcel2->getActiveSheet()->setCellValueByColumnAndRow($col, $row, $val);
            echo '<td>' . $val.'</td>';
			$cell->setValue($val);
			
        }
        echo '</tr>';
    }
    echo '</table>';
}
//Set Specific color
//$objPHPExcel->getActiveSheet()->getStyle('A1')->getFill()->applyFromArray(array('type' => PHPExcel_Style_Fill::FILL_SOLID,'startcolor' => array('rgb' =>'FF1E1E')));

//Write or save
$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel2, 'Excel2007');
// If you want to output e.g. a PDF file, simply do:
//$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'PDF');
$objWriter->save('SaveFile.xlsx');


?>