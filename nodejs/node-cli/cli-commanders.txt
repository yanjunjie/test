***********************// Example 01*************************
const program = require('commander');
program.version('0.1.0');

// Commands
program
.command(`say <string>`)
.description(`Say something interesting`)
.alias(`s`)
.action((name) => {
	console.log(name);
});

// Options 
program
.option('-d, --d', 'Do something interesting')
.action(function(task){
	console.log(`Doing this ${task}`);
});

program.parse(process.argv);


*************************// Example 1.1.0 ****************************



// Options
program
  .version('0.1.0')
  .option('--project [project]', 'Specifies the project name', 'mono')
  .option('--type [type]', 'Type of code to generate, either "item" or "config"', /^(config|item)$/, 'config')
  .option('--title [title]', 'Title of the item or config', 'untitled')
  .option('--comments [comments]', 'Configs: describe the config', '@todo description/comments')
  .option('--write', 'Write the source code to a new file in the expected path')
  .parse(process.argv);

const {
  project, type, title: name, comments: description, write,
} = program;


************************// Example 02**************************

const program = require('commander');
 
program
.option('-c, --cheese <type>', 'add the specified type of cheese', 'blue');
 
program.parse(process.argv);
 
console.log(`cheese: ${program.cheese}`);


*********************// Example 03 **************************
const program = require('commander');
 
program
  .option('-d, --debug', 'output extra debugging')
  .option('-s, --small', 'small pizza size')
  .option('-p, --pizza-type <type>', 'flavour of pizza');
 
program.parse(process.argv);
 
if (program.debug) console.log(program.opts());
console.log('pizza details:');
if (program.small) console.log('- small pizza size');
if (program.pizzaType) console.log(`- ${program.pizzaType}`);








